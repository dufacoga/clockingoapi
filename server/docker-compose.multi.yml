services:
  mariadb-dev:
    image: mariadb:11
    container_name: clockingo-mariadb-dev
    env_file:
      - ../.env.dev
    volumes:
      - mariadb_dev_data:/var/lib/mysql
      - ../scripts/migrations/00-create-dbs.sql:/docker-entrypoint-initdb.d/00-create-dbs.sql:ro
      - ../scripts/migrations/11-schema-dev.sql:/docker-entrypoint-initdb.d/11-schema-dev.sql:ro
      - ../scripts/seeds/12-seed-dev.sql:/docker-entrypoint-initdb.d/12-seed-dev.sql:ro
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 --protocol=TCP -uroot -p\"$${MARIADB_ROOT_PASSWORD:-root}\" >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [devnet]

  api-dev:
    build:
      context: ..
      dockerfile: server/Dockerfile
    container_name: clockingo-api-dev
    restart: unless-stopped
    depends_on:
      mariadb-dev:
        condition: service_healthy
    env_file:
      - ../.env.dev
    ports:
      - "3001:3000"
    command: ["sh", "-lc", "npm ci && npm run start"]
    healthcheck:
      test: ["CMD-SHELL", "wget --header='x-api-key: $${API_KEY}' -qO- http://localhost:3000/health | grep -q '\"ok\":true'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [devnet]

  mariadb-test:
    image: mariadb:11
    container_name: clockingo-mariadb-test
    env_file:
      - ../.env.test
    volumes:
      - mariadb_test_data:/var/lib/mysql
      - ../scripts/migrations/00-create-dbs.sql:/docker-entrypoint-initdb.d/00-create-dbs.sql:ro
      - ../scripts/migrations/21-schema-test.sql:/docker-entrypoint-initdb.d/21-schema-test.sql:ro
      - ../scripts/seeds/22-seed-test.sql:/docker-entrypoint-initdb.d/22-seed-test.sql:ro
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 --protocol=TCP -uroot -p\"$${MARIADB_ROOT_PASSWORD:-root}\" >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [testnet]

  api-test:
    build:
      context: ..
      dockerfile: server/Dockerfile
    container_name: clockingo-api-test
    restart: unless-stopped
    depends_on:
      mariadb-test:
        condition: service_healthy
    env_file:
      - ../.env.test
    volumes:
      - ../tests:/app/tests:ro
      - ../src:/app/src:ro
      - ../vitest.config.ts:/app/vitest.config.ts:ro
      - ../.env.test:/app/.env.test:ro
    ports:
      - "3002:3000"
    command: ["sh", "-lc", "npm ci && npm run start"]
    healthcheck:
      test: ["CMD-SHELL", "wget --header='x-api-key: $${API_KEY}' -qO- http://localhost:3000/health | grep -q '\"ok\":true'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [testnet]

  mariadb-prod:
    image: mariadb:11
    container_name: clockingo-mariadb-prod
    env_file:
      - ../.env.prod
    volumes:
      - mariadb_prod_data:/var/lib/mysql
      - ../scripts/migrations/00-create-dbs.sql:/docker-entrypoint-initdb.d/00-create-dbs.sql:ro
      - ../scripts/migrations/31-schema-prod.sql:/docker-entrypoint-initdb.d/31-schema-prod.sql:ro
      - ../scripts/seeds/32-seed-prod.sql:/docker-entrypoint-initdb.d/32-seed-prod.sql:ro
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 --protocol=TCP -uroot -p\"$${MARIADB_ROOT_PASSWORD:-root}\" >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [prodnet]

  api-prod:
    build:
      context: ..
      dockerfile: server/Dockerfile
    container_name: clockingo-api-prod
    restart: unless-stopped
    depends_on:
      mariadb-prod:
        condition: service_healthy
    env_file:
      - ../.env.prod
    ports:
      - "3000:3000"
    command: ["sh", "-lc", "npm ci && npm run start"]
    healthcheck:
      test: ["CMD-SHELL", "wget --header='x-api-key: $${API_KEY}' -qO- http://localhost:3000/health | grep -q '\"ok\":true'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks: [prodnet]

volumes:
  mariadb_dev_data:
  mariadb_test_data:
  mariadb_prod_data:

networks:
  devnet:
  testnet:
  prodnet: